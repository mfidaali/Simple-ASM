vendor_name = ModelSim
source_file = 1, C:/Users/mfida/OneDrive/Documents/Altera/projects/Simple-ASM/countOneASM.sv
source_file = 1, C:/Users/mfida/OneDrive/Documents/Altera/projects/Simple-ASM/db/countOneASM.cbx.xml
design_name = countOneASM
instance = comp, \result[0]~output , result[0]~output, countOneASM, 1
instance = comp, \result[1]~output , result[1]~output, countOneASM, 1
instance = comp, \result[2]~output , result[2]~output, countOneASM, 1
instance = comp, \result[3]~output , result[3]~output, countOneASM, 1
instance = comp, \result[4]~output , result[4]~output, countOneASM, 1
instance = comp, \result[5]~output , result[5]~output, countOneASM, 1
instance = comp, \result[6]~output , result[6]~output, countOneASM, 1
instance = comp, \result[7]~output , result[7]~output, countOneASM, 1
instance = comp, \done~output , done~output, countOneASM, 1
instance = comp, \clk~input , clk~input, countOneASM, 1
instance = comp, \clk~inputCLKENA0 , clk~inputCLKENA0, countOneASM, 1
instance = comp, \Add0~1 , Add0~1, countOneASM, 1
instance = comp, \rst_n~input , rst_n~input, countOneASM, 1
instance = comp, \start~input , start~input, countOneASM, 1
instance = comp, \start_sync~0 , start_sync~0, countOneASM, 1
instance = comp, \A[7]~input , A[7]~input, countOneASM, 1
instance = comp, \shift_reg~8 , shift_reg~8, countOneASM, 1
instance = comp, \shift_reg[7] , shift_reg[7], countOneASM, 1
instance = comp, \A[6]~input , A[6]~input, countOneASM, 1
instance = comp, \shift_reg~7 , shift_reg~7, countOneASM, 1
instance = comp, \shift_reg[0]~1 , shift_reg[0]~1, countOneASM, 1
instance = comp, \shift_reg[6] , shift_reg[6], countOneASM, 1
instance = comp, \Equal0~1 , Equal0~1, countOneASM, 1
instance = comp, \A[0]~input , A[0]~input, countOneASM, 1
instance = comp, \A[4]~input , A[4]~input, countOneASM, 1
instance = comp, \A[5]~input , A[5]~input, countOneASM, 1
instance = comp, \shift_reg~6 , shift_reg~6, countOneASM, 1
instance = comp, \shift_reg[5] , shift_reg[5], countOneASM, 1
instance = comp, \shift_reg~5 , shift_reg~5, countOneASM, 1
instance = comp, \shift_reg[4] , shift_reg[4], countOneASM, 1
instance = comp, \A[3]~input , A[3]~input, countOneASM, 1
instance = comp, \shift_reg~4 , shift_reg~4, countOneASM, 1
instance = comp, \shift_reg[3] , shift_reg[3], countOneASM, 1
instance = comp, \A[2]~input , A[2]~input, countOneASM, 1
instance = comp, \shift_reg~3 , shift_reg~3, countOneASM, 1
instance = comp, \shift_reg[2] , shift_reg[2], countOneASM, 1
instance = comp, \A[1]~input , A[1]~input, countOneASM, 1
instance = comp, \shift_reg~2 , shift_reg~2, countOneASM, 1
instance = comp, \shift_reg[1] , shift_reg[1], countOneASM, 1
instance = comp, \shift_reg~0 , shift_reg~0, countOneASM, 1
instance = comp, \shift_reg[0] , shift_reg[0], countOneASM, 1
instance = comp, \Equal0~0 , Equal0~0, countOneASM, 1
instance = comp, \curr_state~7 , curr_state~7, countOneASM, 1
instance = comp, \curr_state.COUNT , curr_state.COUNT, countOneASM, 1
instance = comp, \curr_state~6 , curr_state~6, countOneASM, 1
instance = comp, \curr_state.IDLE , curr_state.IDLE, countOneASM, 1
instance = comp, \always5~0 , always5~0, countOneASM, 1
instance = comp, \count[0]~0 , count[0]~0, countOneASM, 1
instance = comp, \count[0] , count[0], countOneASM, 1
instance = comp, \Add0~5 , Add0~5, countOneASM, 1
instance = comp, \count[1] , count[1], countOneASM, 1
instance = comp, \Add0~9 , Add0~9, countOneASM, 1
instance = comp, \count[2] , count[2], countOneASM, 1
instance = comp, \Add0~13 , Add0~13, countOneASM, 1
instance = comp, \count[3] , count[3], countOneASM, 1
instance = comp, \Add0~17 , Add0~17, countOneASM, 1
instance = comp, \count[4] , count[4], countOneASM, 1
instance = comp, \Add0~21 , Add0~21, countOneASM, 1
instance = comp, \count[5] , count[5], countOneASM, 1
instance = comp, \Add0~25 , Add0~25, countOneASM, 1
instance = comp, \count[6] , count[6], countOneASM, 1
instance = comp, \Add0~29 , Add0~29, countOneASM, 1
instance = comp, \count[7] , count[7], countOneASM, 1
instance = comp, \curr_state~5 , curr_state~5, countOneASM, 1
instance = comp, \curr_state.FINISH , curr_state.FINISH, countOneASM, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, countOneASM, 1
